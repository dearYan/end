var fs = require('fs');
var Q = require('q')
var path = './src/page/'
//遍历获取path模块
var fn = require('./function.js');
var libs = [];
fn.each_file(path,function(dir){
	var temppath = path + dir + "/" + "index.js";
	if(fs.existsSync(temppath)){
		var temp_con = fs.readFileSync(temppath,options = {
			encoding : 'utf-8'
		});
		var con = temp_con.match(/import(.*)\{(.*)\}(.*)\'antd\'/g);
		if(con){
			con.forEach(function(data){
				var temp = data.match(/\{(.*)\}/g)[0].replace('{','').replace('}','');
				var lib = temp.split(',');
				lib.map(function(l){
					var l_t = 'antd/lib/'+l.replace(' ','').toLowerCase();
					if(libs.indexOf(l_t) == -1){
						libs.push(l_t);	
					}
				})
			})
		}
		//var chunk_config = fs.openSync(chunk_file,'a',0755);
		//temp_con = temp_con.replace(/{filename}/g,dir);	
		//fs.writeSync(chunk_config,temp_con);
		//fs.close(chunk_config);
	}
})
/**
 *	写入需要代码分离的antd模块
 */
function writeAntdVendor(){
	var w_file = path + 'vendor.js';
	if(fs.existsSync(w_file)){
		fs.unlinkSync(w_file);
	}
	var antd_tpl = fs.readFileSync('./.fr/antd_tpl.js',options = {
		encoding : 'utf-8'
	});
	var fd = fs.openSync(w_file,'a',0755);
    var temp_libs = JSON.stringify(libs).replace(/\",/g,'",\n	')
									.replace('[','')
									.replace(']','');
	temp_con = antd_tpl.replace(/{antd_tpl}/g,temp_libs);	
	fs.writeSync(fd,temp_con);
	fs.close(fd);

}
/**
 *	写入需要代码分离的antd模块
 */
function writeAntdProduction(){
	var w_file = path + 'vendor.js';
	if(fs.existsSync(w_file)){
		fs.unlinkSync(w_file);
	}
	var antd_tpl = fs.readFileSync('./.fr/antd_tpl.js',options = {
		encoding : 'utf-8'
	});
	var fd = fs.openSync(w_file,'a',0755);
    var temp_libs = JSON.stringify(libs).replace(/\",/g,'",\n	')
									.replace('[','')
									.replace(']','');
	temp_con = antd_tpl.replace(/{antd_tpl}/g,temp_libs);	
	fs.writeSync(fd,temp_con);
	fs.close(fd);

}

/**
 *	写入需要代码分离的模块
 */
function writeVendor(){
	writeAntdVendor();
}
writeVendor();	
